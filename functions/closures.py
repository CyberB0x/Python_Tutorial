# –ü—Ä–∏–º–µ—Ä —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–º—ã–∫–∞–Ω–∏—è:
def outer_function(x):
    def inner_function(y):
        return x + y
    return inner_function

closure_example = outer_function(10)
print(closure_example(5))

"""
üîπ –í —ç—Ç–æ–º –ø—Ä–∏–º–µ—Ä–µ outer_function —Å–æ–∑–¥–∞–µ—Ç inner_function, –∫–æ—Ç–æ—Ä–∞—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç x, –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –≤ outer_function. –î–∞–∂–µ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è outer_function, –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è 
—Ñ—É–Ω–∫—Ü–∏—è –≤—Å–µ –µ—â–µ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫ x, —á—Ç–æ –∏ –¥–µ–ª–∞–µ—Ç –µ–µ –∑–∞–º—ã–∫–∞–Ω–∏–µ–º.
"""

# –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–±—Ä–∏–∫ —Ñ—É–Ω–∫—Ü–∏–π
def multiplier(factor):
    def multiply(x):
        return x * factor
    return multiply

double = multiplier(2)
triple = multiplier(3)

print(double(5))  # 10
print(triple(5))  # 15

"""
üîπ –ó–¥–µ—Å—å multiplier –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç factor –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é multiply, –∫–æ—Ç–æ—Ä–∞—è —É–º–Ω–æ–∂–∞–µ—Ç –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –µ–π –∞—Ä–≥—É–º–µ–Ω—Ç –Ω–∞ —ç—Ç–æ—Ç –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç. 
–¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, double –≤—Å–µ–≥–¥–∞ —É–º–Ω–æ–∂–∞–µ—Ç —á–∏—Å–ª–æ –Ω–∞ 2, –∞ triple ‚Äî –Ω–∞ 3.
"""

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–µ–∑ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
def counter():
    count = 0
    def increment():
        nonlocal count
        count += 1
        return count
    return increment

counter_instance = counter()
print(counter_instance())  # 1
print(counter_instance())  # 2

"""
üîπ –í —ç—Ç–æ–º –ø—Ä–∏–º–µ—Ä–µ counter —Å–æ–∑–¥–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é count –≤–Ω—É—Ç—Ä–∏ —Å–≤–æ–µ–π –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏. –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —Ñ—É–Ω–∫—Ü–∏—è increment –∏—Å–ø–æ–ª—å–∑—É–µ—Ç nonlocal, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω—è—Ç—å count, —Å–æ—Ö—Ä–∞–Ω—è—è –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–µ –º–µ–∂–¥—É –≤—ã–∑–æ–≤–∞–º–∏ —Ñ—É–Ω–∫—Ü–∏–∏. 
–¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è count –æ—Å—Ç–∞–µ—Ç—Å—è –¥–æ—Å—Ç—É–ø–Ω–æ–π –≤–Ω—É—Ç—Ä–∏ –∑–∞–º—ã–∫–∞–Ω–∏—è –¥–∞–∂–µ –ø–æ—Å–ª–µ –≤—ã—Ö–æ–¥–∞ –∏–∑ counter.
"""
