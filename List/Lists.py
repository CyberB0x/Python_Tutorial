"""
"Сегодня мы поговорим о коллекции list в Python. Это одна из самых популярных и удобных структур данных, позволяющая хранить упорядоченные наборы элементов.
Списки могут содержать любые типы данных: числа, строки, объекты или даже другие списки. Основные операции включают добавление, удаление, извлечение элементов, а также сортировку и фильтрацию.
Работа со списками делает Python мощным инструментом для обработки данных. Например, с помощью списочных включений (list comprehensions) мы можем быстро фильтровать или преобразовывать данные.
Также, списки поддерживают вложенность, что позволяет создавать матрицы или многомерные структуры.
Используйте списки, чтобы организовать и обрабатывать ваши данные с легкостью!"
"""

# Примеры использования list

"""
Создание списка и базовые операции
-----------------------------------
"""
numbers = [1, 2, 3, 4, 5]
print("Список:", numbers)

# Добавляем элемент в конец
numbers.append(6)
print("После добавления элемента:", numbers)

# Удаляем элемент
numbers.remove(3)
print("После удаления элемента:", numbers)

# Извлекаем последний элемент
last = numbers.pop()
print("Извлечённый элемент:", last)
print("Список после извлечения:", numbers)


"""
Итерации и фильтрация
-------------------------
"""
numbers = [1, 2, 3, 4, 5]

# Увеличиваем каждое число в списке на 2
incremented = [x + 2 for x in numbers]
print("Увеличенные числа:", incremented)

# Фильтруем только чётные числа
evens = [x for x in numbers if x % 2 == 0]
print("Чётные числа:", evens)


"""
Работа с вложенными списками
-------------------------------
"""
matrix = [
    [1, 2, 3],
    [4, 5, 6],
    [7, 8, 9]
]

# Обращаемся к элементу в строке 1 и колонке 2
print("Элемент [1][2]:", matrix[1][2])

# Печатаем все элементы матрицы
for row in matrix:
    for value in row:
        print(value, end=" ")




"""
Сортировка и работа с элементами
----------------------------------
"""

fruits = ["apple", "banana", "cherry", "date"]

# Сортируем список
fruits.sort()
print("Отсортированный список:", fruits)

# Обращаемся к первому и последнему элементу
print("Первый фрукт:", fruits[0])
print("Последний фрукт:", fruits[-1])



